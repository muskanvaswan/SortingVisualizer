{"version":3,"sources":["SortingVisualizer/Sorter.js","App.js","reportWebVitals.js","index.js"],"names":["Sorter","props","componentDidMount","generateUnsortedArray","handleInputChange","element","setState","target","name","value","handleRangeChange","range","state","status_text","sorting","arr","i","length_array","push","getRndInteger","array_unsorted","setElementValue","index","side","left","highlight_left","right","highlight_right","console","log","swapElementsInArray","leftElement","rightElement","heapSort","object","a","n","wctc","bctc","actc","sc","parseInt","heapify","timeout","speed","mergeSort","l","r","m","merge","insertionSort","size","key","j","selectionSort","min","bubbleSort","step","swapped","quickSort","start","end","length","leftPointer","rightPointer","String","p","pivot","mid","n1","n2","L","R","k","largest","className","type","onChange","this","map","val","style","width","padding","onClick","delay","Promise","res","setTimeout","max","Math","floor","random","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d819fe4b.chunk.js","sourcesContent":["import React from \"react\";\nimport './Sorter.css';\n\n\nexport default class Sorter extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n     \"array_unsorted\": [76, 46, 77, 88, 30, 18, 14, 20, 13, 26],\n     \"range\": [10, 1000],\n     \"length_array\": 60,\n     \"highlight_left\": 0,\n     \"highlight_right\": 0,\n     \"speed\": 50,\n     \"sorting\": false,\n     \"wctc\": \"\",\n     \"bctc\": \"\",\n     \"actc\": \"\",\n     \"sc\": \"\",\n     \"status_text\": \"Choose any of the sorticing algorithms before to start visualizing!\"\n    };\n  }\n  render(){\n    return (\n      <div>\n        <div className=\"fixed-side d-none d-sm-block bg-dark p-4\">\n          <div className=\"form-group text-white my-3\">\n            <label className=\"mb-2\">Speed (in milliseconds):</label>\n            <input type=\"number\" className=\"form-control\" name=\"speed\" onChange={this.handleInputChange} value={this.state.speed}></input>\n          </div>\n          <div className=\"form-group text-white my-3\">\n            <label className=\"mb-2\">Length of array:</label>\n            <input type=\"number\" className=\"form-control\" name=\"length_array\" onChange={this.handleInputChange} value={this.state.length_array}></input>\n          </div>\n          <div className=\"form-group text-white my-3\">\n            <label className=\"mb-2\">Range of Elemets</label>\n            <input type=\"number\" className=\"form-control\" name=\"range\" min=\"650\" onChange={this.handleRangeChange} value={this.state.range[1]}></input>\n          </div>\n          <div className=\"text-white my-3\">\n            <p className=\"my-4\">{this.state.status_text}</p>\n          </div>\n          { this.state.sorting ?\n            <div >\n              <table>\n              <tbody>\n                <tr>\n                  <td>Worst Case Time Complexity</td>\n                  <td>{this.state.wctc}</td>\n                </tr>\n                <tr>\n                  <td>Best Case Time Complexity</td>\n                  <td>{this.state.bctc}</td>\n                </tr>\n                <tr>\n                  <td>Average Time Complexity</td>\n                  <td>{this.state.actc}</td>\n                </tr>\n                <tr>\n                  <td>Space Complexity</td>\n                  <td>{this.state.sc}</td>\n                </tr>\n              </tbody>\n              </table>\n\n            </div> : \"\" }\n\n        </div>\n        <div className=\"mt-5 mr-2\">\n          {this.state.array_unsorted.map((val, i)=> {\n            return (\n          <div className={\"bar my-1 \" + ( (i === this.state.highlight_left || i === this.state.highlight_right) ? 'highlight-bar-1' : 'hidden')}\n            style={{width: String(parseInt(100*val/(this.state.range[1]-this.state.range[0])))+\"%\", padding: parseInt(200/this.state.length_array)}}\n            key={i}>{this.state.length_array <25? val: \"\"}\n          </div>)\n          })}\n        </div>\n        <div className=\"fixed-bottom bg-black text-white d-sm-flex p-3 justify-content-end\">\n          <button className=\"btn rounded-pill border border-info text-white my-auto \" onClick={this.quickSort}>Quick Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto mx-3\" onClick={this.mergeSort}>Merge Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto \" onClick={this.heapSort}>Heap Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto mx-3\" onClick={this.bubbleSort}>Bubble Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto \" onClick={this.selectionSort}>Selection Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto mx-3\" onClick={this.insertionSort}>Insertion Sort</button>\n          <button className=\"btn rounded-pill border border-info text-white my-auto \" onClick={this.generateUnsortedArray}>Generate New Array</button>\n        </div>\n      </div>\n    )\n  }\n  componentDidMount = () =>{\n    this.generateUnsortedArray();\n  }\n  handleInputChange = (element) =>{\n    this.setState({[element.target.name]: element.target.value})\n    this.generateUnsortedArray()\n  }\n  handleRangeChange = (element) =>{\n    if (element.target.value > 700){\n      this.setState({range: [ 10, element.target.value]})\n      this.generateUnsortedArray()\n\n    }\n    else{\n      this.setState(state => { return {status_text: state.status_text+\"Please keep minimum range at 700.\"}})\n\n    }\n  }\n  generateUnsortedArray = () => {\n    this.setState({status_text: \"Choose any of the sorticing algorithms before to start visualizing!\", sorting: false})\n\n    this.setState(state => {\n      var arr = []\n      for (var i = 0; i < state.length_array; i++){\n        arr.push(this.getRndInteger(state.range[0], state.range[1]))\n      }\n      return { array_unsorted: arr}\n    })\n  }\n  setElementValue = (index, value, side) => {\n    this.setState(state => {\n      var arr = [];\n      arr = [...state.array_unsorted];\n      arr[index] = value;\n      var left = this.state.highlight_left;\n      var right = this.state.highlight_right;\n      if(side===\"left\"){\n        left = index;\n      }\n      else{\n        right = index;\n      }\n      console.log(\"setting value\", value)\n      return {array_unsorted: arr, highlight_left:left, highlight_right: right}\n    })\n  }\n  swapElementsInArray = (left, right) => {\n    this.setState(state => {\n      var arr = [];\n      var leftElement = state.array_unsorted[left];\n      var rightElement = state.array_unsorted[right];\n      //console.log(\"swapping\"+left+\"and\"+right)\n      //console.log(\"swapping\"+leftElement+\"and\"+rightElement)\n\n\n      arr = [...state.array_unsorted];\n      arr[left] = rightElement;\n      arr[right] = leftElement;\n      return {array_unsorted: arr, highlight_left: left, highlight_right: right}\n    })\n  }\n\n  // main function to do heap sort\n  heapSort = async (object, n = this.state.length_array) => {\n    await this.setState({status_text: \"Current Visualizing: Heap Sort\",\n      sorting: true,\n      wctc: \"O(nlogn)\",\n      bctc: \"O(nlogn)\",\n      actc: \"O(nlogn)\",\n      sc: \"O(1) auxillary\"})\n    //console.log(n)\n    // Build max heap\n    for (let i = parseInt(n/2) - 1; i >= 0; i--){\n      await this.heapify(n, i);\n      //console.log(n, i)\n    }\n\n    // Heap sort\n    for (let i = n - 1; i >= 0; i--) {\n      await this.swapElementsInArray(0, i);\n      await this.timeout(this.state.speed)\n\n      // Heapify root element to get highest element at root again\n      await this.heapify(i, 0);\n    }\n  }\n  mergeSort = async (object, l = 0, r =  this.state.length_array - 1) => {\n    await this.setState({status_text: \"Current Visualizing: Merge Sort\",\n      sorting: true,\n      wctc: \"O(nlogn)\",\n      bctc: \"O(nlogn)\",\n      actc: \"O(nlogn)\",\n      sc: \"O(1) auxillary\"})\n\n    if(l >= r){\n        return;//returns recursively\n    }\n    var m = l+ parseInt((r-l)/2);\n    await this.mergeSort(4, l,m);\n    await this.mergeSort(4, m+1,r);\n    await this.merge(l,m,r);\n  }\n  //Function to perform the insertion sort Algorithm\n  insertionSort = async () => {\n    await this.setState({status_text: \"Current Visualizing: Insertion Sort\",\n      sorting: true,\n      wctc: \"O(n sq.)\",\n      bctc: \"O(n)\",\n      actc: \"O(n sq.)\",\n      sc: \"O(n) auxillary\"})\n    var size = this.state.length_array;\n     var i, key, j;\n     for (i = 1; i < size; i++)\n     {\n         key = this.state.array_unsorted[i];\n         j = i - 1;\n\n         /* Move elements of arr[0..i-1], that are\n         greater than key, to one position ahead\n         of their current position */\n         while (j >= 0 && this.state.array_unsorted[j] > key)\n         {\n             await this.setElementValue(j + 1, this.state.array_unsorted[j], \"left\");\n             await this.timeout(this.state.speed)\n             j = j - 1;\n         }\n         await this.setElementValue(j + 1, key, \"right\");\n\n     }\n  }\n  //Function to perform the selection Sort Algorithm\n  selectionSort = async () => {\n    await this.setState({status_text: \"Current Visualizing: Selection Sort\",\n      sorting: true,\n      wctc: \"O(n sq.)\",\n      bctc: \"O(n sq.)\",\n      actc: \"O(n sq.)\",\n      sc: \"O(n) auxillary\"})\n\n    var size = this.state.length_array;\n\n    for (var i = 0; i < size; i++){\n      var min = i;\n      /* check the element to be minimum */\n      for (var j = i+1; j < size; j++) {\n        if (this.state.array_unsorted[j] < this.state.array_unsorted[min]){\n            min = j;\n        }\n      }\n      /* swap the minimum element with the current element*/\n      if (min !== i){\n        await this.swapElementsInArray(min, i)\n        await this.timeout(this.state.speed)\n      }\n    }\n  }\n  //Function for performing the bubble sort algorith\n  bubbleSort = async () => {\n    await this.setState({status_text: \"Current Visualizing: Bubble Sort\",\n      sorting: true,\n      wctc: \"O(n sq.)\",\n      bctc: \"O(n sq.)\",\n      actc: \"O(n sq.)\",\n      sc: \"O(1) auxillary\"})\n\n    var size = this.state.length_array\n    for (var step = 0; step < size - 1; ++step) {\n      // Run loops two times: one for walking throught the array\n      // and the other for comparison\n      var swapped = 0;\n      for (var i = 0; i < size - step - 1; ++i) {\n        // To sort in descending order, change > to < in this line.\n        if (this.state.array_unsorted[i] > this.state.array_unsorted[i + 1]) {\n\n          // Swap if greater is at the rear position\n          await this.swapElementsInArray(i, i+1)\n          await this.timeout(this.state.speed)\n          swapped = 1;\n        }\n      }\n\n      // If there is not swapping in the last swap, then the array is already sorted.\n      if (swapped === 0)\n        break;\n    }\n  }\n  //Function performing quick Sort Algorithm\n  quickSort = async (object, start = 0, end = 100000001) => {\n    await this.setState({status_text: \"Current Visualizing: Quick Sort\",\n      sorting: true,\n      wctc: \"O(n sq.)\",\n      bctc: \"O(nlogn)\",\n      actc: \"O(nlogn)\",\n      sc: \"O(n) auxillary\"})\n\n    if (end === 100000001){\n      end = this.state.array_unsorted.length -1;\n    }\n    if (end <= 1 || end - start <= 1){\n      if(this.state.array_unsorted[start]>this.state.array_unsorted[end]){\n        await this.swapElementsInArray(start, end);\n      }\n      return \"NO\"\n    }\n    var leftPointer = start;\n    var rightPointer = end;\n    console.log(\"start: \" + String(start) + \"end: \", end)\n    var p = start + parseInt((end-start)/2)\n    var pivot = this.state.array_unsorted[p]\n    console.log(\"pivot:\", pivot)\n    while(!(leftPointer >= rightPointer)){\n      for (; this.state.array_unsorted[leftPointer] <= pivot && leftPointer < end && !(leftPointer === rightPointer); leftPointer++) {}\n      for (; (this.state.array_unsorted[rightPointer] > pivot) && !(leftPointer === rightPointer) && (rightPointer > start); rightPointer--) {}\n      console.log(\"l: \"+String(leftPointer)+\"R:\",rightPointer)\n\n      if (leftPointer !== rightPointer){\n        await this.swapElementsInArray(leftPointer, rightPointer);\n        await this.timeout(this.state.speed)\n        if (rightPointer - leftPointer>1){\n          leftPointer++;\n          rightPointer--;\n        }\n      }\n      else{\n        if (this.state.array_unsorted[leftPointer] > pivot){\n          leftPointer--;\n          rightPointer--;\n        }\n        if(leftPointer === end ){\n          if(this.state.array_unsorted[start] !== pivot){\n            leftPointer = start;\n            rightPointer = end;\n            pivot = this.state.array_unsorted[start]\n          }\n          else{\n            leftPointer = start;\n            rightPointer = end;\n            pivot = this.state.array_unsorted[end]\n          }\n        }\n      }\n\n    }\n    console.log(this.state.array_unsorted[leftPointer], this.state.array_unsorted[rightPointer])\n    if (this.state.array_unsorted[leftPointer] > pivot){\n      leftPointer--;\n      rightPointer--;\n    }\n\n    var a = await this.quickSort(3,start, rightPointer);\n    a = await this.quickSort(3,rightPointer+1, end);\n    return a\n  }\n\n  //Helper Function for mergeSort\n  merge = async (left, mid, right) => {\n\n    var n1 = mid - left + 1;\n    var n2 = right - mid;\n    var L = [], R = [];\n    for (let i = 0; i < n1; i++)\n        L[i] = this.state.array_unsorted[left + i];\n    for (let j = 0; j < n2; j++)\n        R[j] = this.state.array_unsorted[mid + 1 + j];\n\n    var i = 0;\n    var j = 0;\n    var k = left;\n\n    while (i < n1 && j < n2) {\n        if (L[i] <= R[j]) {\n            await this.setElementValue(k, L[i], \"left\");\n            await this.timeout(this.state.speed);\n            i++;\n        }\n        else {\n          await this.setElementValue(k, R[j], \"right\");\n          await this.timeout(this.state.speed);\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n      await this.setElementValue(k, L[i], \"left\");\n      await this.timeout(this.state.speed);\n        i++;\n        k++;\n    }\n    while (j < n2) {\n      await this.setElementValue(k, R[j], \"right\");\n      await this.timeout(this.state.speed);\n        j++;\n        k++;\n    }\n  }\n\n  //Helper function for heapSort\n  heapify = async (n, i) => {\n    var largest = i;\n    var left = 2 * i + 1;\n    var right = 2 * i + 2;\n\n    if (left < n && this.state.array_unsorted[left] > this.state.array_unsorted[largest])\n      largest = left;\n\n    if (right < n && this.state.array_unsorted[right] > this.state.array_unsorted[largest])\n      largest = right;\n\n    // Swap and continue heapifying if root is not largest\n    if (largest !== i) {\n      await this.swapElementsInArray(i, largest);\n      await this.timeout(this.state.speed)\n      await this.heapify( n, largest);\n    }\n  }\n  timeout(delay: number) {\n    return new Promise( res => setTimeout(res, delay) );\n  }\n\n  getRndInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\n  }\n}\n// [76,64,1,84,62,43,60,22,84,74]\n// [76, 46, 77, 88, 30, 18, 14, 20, 13, 26]\n","\nimport './App.css';\nimport Sorter from './SortingVisualizer/Sorter.js'\n\n\nfunction App() {\n  return (\n    <Sorter/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}